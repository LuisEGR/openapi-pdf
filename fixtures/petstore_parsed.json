{
  "title": "Swagger Petstore",
  "version": "1.0.0",
  "apis": [
    {
      "endpoint": "/pet",
      "method": "post",
      "summary": "Add a new pet to the store",
      "description": "",
      "tags": [
        "pet"
      ],
      "requestSchema": null,
      "responseSchema": null,
      "requestExamples": [],
      "responseExamples": []
    },
    {
      "endpoint": "/pet",
      "method": "put",
      "summary": "Update an existing pet",
      "description": "",
      "tags": [
        "pet"
      ],
      "requestSchema": null,
      "responseSchema": null,
      "requestExamples": [],
      "responseExamples": []
    },
    {
      "endpoint": "/pet/findByStatus",
      "method": "get",
      "summary": "Finds Pets by status",
      "description": "Multiple status values can be provided with comma separated strings",
      "tags": [
        "pet"
      ],
      "requestSchema": null,
      "responseSchema": null,
      "requestExamples": [],
      "responseExamples": []
    },
    {
      "endpoint": "/pet/findByTags",
      "method": "get",
      "summary": "Finds Pets by tags",
      "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
      "tags": [
        "pet"
      ],
      "requestSchema": null,
      "responseSchema": null,
      "requestExamples": [],
      "responseExamples": []
    },
    {
      "endpoint": "/pet/{petId}",
      "method": "get",
      "summary": "Find pet by ID",
      "description": "Returns a single pet",
      "tags": [
        "pet"
      ],
      "requestSchema": null,
      "responseSchema": null,
      "requestExamples": [],
      "responseExamples": []
    },
    {
      "endpoint": "/pet/{petId}",
      "method": "post",
      "summary": "Updates a pet in the store with form data",
      "description": "",
      "tags": [
        "pet"
      ],
      "requestSchema": null,
      "responseSchema": null,
      "requestExamples": [],
      "responseExamples": []
    },
    {
      "endpoint": "/pet/{petId}",
      "method": "delete",
      "summary": "Deletes a pet",
      "description": "",
      "tags": [
        "pet"
      ],
      "requestSchema": null,
      "responseSchema": null,
      "requestExamples": [],
      "responseExamples": []
    },
    {
      "endpoint": "/pet/{petId}/uploadImage",
      "method": "post",
      "summary": "uploads an image",
      "description": "",
      "tags": [
        "pet"
      ],
      "requestSchema": null,
      "responseSchema": null,
      "requestExamples": [],
      "responseExamples": []
    },
    {
      "endpoint": "/store/inventory",
      "method": "get",
      "summary": "Returns pet inventories by status",
      "description": "Returns a map of status codes to quantities",
      "tags": [
        "store"
      ],
      "requestSchema": null,
      "responseSchema": null,
      "requestExamples": [],
      "responseExamples": []
    },
    {
      "endpoint": "/store/order",
      "method": "post",
      "summary": "Place an order for a pet",
      "description": "",
      "tags": [
        "store"
      ],
      "requestSchema": null,
      "responseSchema": null,
      "requestExamples": [],
      "responseExamples": []
    },
    {
      "endpoint": "/store/order/{orderId}",
      "method": "get",
      "summary": "Find purchase order by ID",
      "description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
      "tags": [
        "store"
      ],
      "requestSchema": null,
      "responseSchema": null,
      "requestExamples": [],
      "responseExamples": []
    },
    {
      "endpoint": "/store/order/{orderId}",
      "method": "delete",
      "summary": "Delete purchase order by ID",
      "description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
      "tags": [
        "store"
      ],
      "requestSchema": null,
      "responseSchema": null,
      "requestExamples": [],
      "responseExamples": []
    },
    {
      "endpoint": "/user",
      "method": "post",
      "summary": "Create user",
      "description": "This can only be done by the logged in user.",
      "tags": [
        "user"
      ],
      "requestSchema": null,
      "responseSchema": null,
      "requestExamples": [],
      "responseExamples": []
    },
    {
      "endpoint": "/user/createWithArray",
      "method": "post",
      "summary": "Creates list of users with given input array",
      "description": "",
      "tags": [
        "user"
      ],
      "requestSchema": null,
      "responseSchema": null,
      "requestExamples": [],
      "responseExamples": []
    },
    {
      "endpoint": "/user/createWithList",
      "method": "post",
      "summary": "Creates list of users with given input array",
      "description": "",
      "tags": [
        "user"
      ],
      "requestSchema": null,
      "responseSchema": null,
      "requestExamples": [],
      "responseExamples": []
    },
    {
      "endpoint": "/user/login",
      "method": "get",
      "summary": "Logs user into the system",
      "description": "",
      "tags": [
        "user"
      ],
      "requestSchema": null,
      "responseSchema": null,
      "requestExamples": [],
      "responseExamples": []
    },
    {
      "endpoint": "/user/logout",
      "method": "get",
      "summary": "Logs out current logged in user session",
      "description": "",
      "tags": [
        "user"
      ],
      "requestSchema": null,
      "responseSchema": null,
      "requestExamples": [],
      "responseExamples": []
    },
    {
      "endpoint": "/user/{username}",
      "method": "get",
      "summary": "Get user by user name",
      "description": "",
      "tags": [
        "user"
      ],
      "requestSchema": null,
      "responseSchema": null,
      "requestExamples": [],
      "responseExamples": []
    },
    {
      "endpoint": "/user/{username}",
      "method": "put",
      "summary": "Updated user",
      "description": "This can only be done by the logged in user.",
      "tags": [
        "user"
      ],
      "requestSchema": null,
      "responseSchema": null,
      "requestExamples": [],
      "responseExamples": []
    },
    {
      "endpoint": "/user/{username}",
      "method": "delete",
      "summary": "Delete user",
      "description": "This can only be done by the logged in user.",
      "tags": [
        "user"
      ],
      "requestSchema": null,
      "responseSchema": null,
      "requestExamples": [],
      "responseExamples": []
    }
  ]
}